//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ARSDAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ARSEntities : DbContext
    {
        public ARSEntities()
            : base("name=ARSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<AirCraft> AirCrafts { get; set; }
        public virtual DbSet<AirFare> AirFares { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<Charge> Charges { get; set; }
        public virtual DbSet<Contact_Details> Contact_Details { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<Flight_Schedule> Flight_Schedule { get; set; }
        public virtual DbSet<Passenger> Passengers { get; set; }
        public virtual DbSet<Route> Routes { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<Booking> Bookings { get; set; }
    
        public virtual ObjectResult<SearchFlight_Result> SearchFlight(string airport, string destination)
        {
            var airportParameter = airport != null ?
                new ObjectParameter("Airport", airport) :
                new ObjectParameter("Airport", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchFlight_Result>("SearchFlight", airportParameter, destinationParameter);
        }
    
        public virtual int SearchFlight1(string airport, string destination)
        {
            var airportParameter = airport != null ?
                new ObjectParameter("Airport", airport) :
                new ObjectParameter("Airport", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchFlight1", airportParameter, destinationParameter);
        }
    
        public virtual int SearchFlight2(string airport, string destination)
        {
            var airportParameter = airport != null ?
                new ObjectParameter("Airport", airport) :
                new ObjectParameter("Airport", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchFlight2", airportParameter, destinationParameter);
        }
    
        public virtual int SearchFlight3(string airport, string destination)
        {
            var airportParameter = airport != null ?
                new ObjectParameter("Airport", airport) :
                new ObjectParameter("Airport", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchFlight3", airportParameter, destinationParameter);
        }
    
        public virtual ObjectResult<SearchFlightNew_Result> SearchFlightNew(string airport, string destination)
        {
            var airportParameter = airport != null ?
                new ObjectParameter("Airport", airport) :
                new ObjectParameter("Airport", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchFlightNew_Result>("SearchFlightNew", airportParameter, destinationParameter);
        }
    
        public virtual int SearchFlightNew1(string airport, string destination)
        {
            var airportParameter = airport != null ?
                new ObjectParameter("Airport", airport) :
                new ObjectParameter("Airport", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchFlightNew1", airportParameter, destinationParameter);
        }
    
        public virtual int DecrementCapacity(string acNumber)
        {
            var acNumberParameter = acNumber != null ?
                new ObjectParameter("AcNumber", acNumber) :
                new ObjectParameter("AcNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DecrementCapacity", acNumberParameter);
        }
    
        public virtual int AmountToPay(Nullable<System.DateTime> departure, Nullable<int> psID)
        {
            var departureParameter = departure.HasValue ?
                new ObjectParameter("Departure", departure) :
                new ObjectParameter("Departure", typeof(System.DateTime));
    
            var psIDParameter = psID.HasValue ?
                new ObjectParameter("PsID", psID) :
                new ObjectParameter("PsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AmountToPay", departureParameter, psIDParameter);
        }
    
        public virtual ObjectResult<ViewTicket_Result> ViewTicket(Nullable<int> psID, Nullable<System.DateTime> departure)
        {
            var psIDParameter = psID.HasValue ?
                new ObjectParameter("PsID", psID) :
                new ObjectParameter("PsID", typeof(int));
    
            var departureParameter = departure.HasValue ?
                new ObjectParameter("Departure", departure) :
                new ObjectParameter("Departure", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewTicket_Result>("ViewTicket", psIDParameter, departureParameter);
        }
    
        public virtual ObjectResult<Booking> ViewTicket1(Nullable<int> psID, Nullable<System.DateTime> departure)
        {
            var psIDParameter = psID.HasValue ?
                new ObjectParameter("PsID", psID) :
                new ObjectParameter("PsID", typeof(int));
    
            var departureParameter = departure.HasValue ?
                new ObjectParameter("Departure", departure) :
                new ObjectParameter("Departure", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Booking>("ViewTicket1", psIDParameter, departureParameter);
        }
    
        public virtual ObjectResult<Booking> ViewTicket1(Nullable<int> psID, Nullable<System.DateTime> departure, MergeOption mergeOption)
        {
            var psIDParameter = psID.HasValue ?
                new ObjectParameter("PsID", psID) :
                new ObjectParameter("PsID", typeof(int));
    
            var departureParameter = departure.HasValue ?
                new ObjectParameter("Departure", departure) :
                new ObjectParameter("Departure", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Booking>("ViewTicket1", mergeOption, psIDParameter, departureParameter);
        }
    }
}
